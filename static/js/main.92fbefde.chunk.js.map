{"version":3,"sources":["Components/searchBar.js","Api/youtube.js","Components/VideoItem.js","Components/videoList.js","Components/videoDetail.js","App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","onClick","onVideoSelect","video","src","snippet","thumbnails","high","url","alt","title","videoList","renderedList","videos","map","id","videoId","videoDetail","videoSrc","description","App","selectedVideo","onTermSubmit","a","Youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"0PAkCeA,E,4MA/BXC,MAAQ,CAAEC,KAAM,I,EAEhBC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACH,KAAKE,EAAME,OAAOC,S,EAGrCC,aAAe,SAACJ,GACZA,EAAMK,iBAEN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,uDAInC,OACI,yBAAKS,UAAU,yBACX,0BAAMC,SAAUC,KAAKL,aAAcG,UAAU,WACzC,yBAAKA,UAAU,SACX,+CACA,2BACIJ,MAAOM,KAAKZ,MAAMC,KAClBY,KAAK,OACLC,SAAYF,KAAKV,uB,GAtBrBa,IAAMC,W,QCEfC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,wCACTC,OAAO,CACHC,KAAM,UACNR,KAAK,QACLS,WAAY,IACZC,IARI,6CCeGC,G,MAdG,SAACf,GACf,OACI,yBAAKgB,QAAS,kBAAMhB,EAAMiB,cAAcjB,EAAMkB,QAAQjB,UAAU,mBAC5D,yBAAKA,UAAU,WAAWkB,IAAOnB,EAAMkB,MAAME,QAAQC,WAAWC,KAAKC,IAAKC,IAAI,8BAC9E,yBAAKvB,UAAU,WACX,yBAAKA,UAAU,UACVD,EAAMkB,MAAME,QAAQK,WCU1BC,EAhBG,SAAC1B,GAEf,IAAM2B,EAAe3B,EAAM4B,OAAOC,KAAI,SAACX,GACnC,OAAQ,kBAAC,EAAD,CACIJ,IAAOI,EAAMY,GAAGC,QAChBd,cAAejB,EAAMiB,cACrBC,MAAOA,OAGnB,OACI,yBAAKjB,UAAU,2BACV0B,ICYFK,EAxBK,SAAChC,GACjB,IAAIA,EAAMkB,MACN,OAAO,iDAGX,IAAMe,EAAQ,oCAAgCjC,EAAMkB,MAAMY,GAAGC,SAE7D,OACI,yBAAK9B,UAAU,IACX,yBAAKA,UAAU,YACX,4BAAQwB,MAAM,eAAeN,IAAKc,KAElC,yBAAKhC,UAAU,cACX,wBAAIA,UAAU,aACTD,EAAMkB,MAAME,QAAQK,OAEzB,2BACKzB,EAAMkB,MAAME,QAAQc,gBC4B9BC,E,4MAvCX5C,MAAQ,CAAEqC,OAAQ,GAAIQ,cAAe,M,EAErCC,a,uCAAe,WAAM7C,GAAN,eAAA8C,EAAA,sEACWC,EAAQC,IAAI,UAAW,CAC1C7B,OAAO,CACF8B,EAAGjD,KAHA,OACNkD,EADM,OAOZ,EAAK/C,SAAS,CAACiC,OAAOc,EAASC,KAAKC,MACrBR,cAAeM,EAASC,KAAKC,MAAM,KARtC,2C,wDAWf3B,cAAgB,SAACC,GACb,EAAKvB,SAAS,CAACyC,cAAelB,K,uDAI9B,OACA,yBAAKjB,UAAU,gBACX,kBAAC,EAAD,CAAWH,aAAcK,KAAKkC,eAC1B,yBAAKpC,UAAU,WACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,EAAD,CAAaiB,MAAOf,KAAKZ,MAAM6C,iBAGnC,yBAAKnC,UAAU,oBACX,kBAAC,EAAD,CACIgB,cAAed,KAAKc,cACpBW,OAAUzB,KAAKZ,MAAMqC,iB,GAhCnCtB,IAAMC,WCFxBsC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.92fbefde.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component{\r\n    state = { term: \"\"};\r\n    \r\n    onInputChange = (event) => {\r\n        this.setState({term:event.target.value});\r\n    };\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.onFormSubmit(this.state.term)\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"ui segment search-bar\">\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>Video Search</label>\r\n                        <input \r\n                            value={this.state.term} \r\n                            type=\"text\"\r\n                            onChange = {this.onInputChange} \r\n                        />\r\n                            \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import axios from 'axios';\r\n \r\nconst KEY = \"AIzaSyD5HR2-WKZhqC8tJc5lR8ZgPriGBFPPPKg\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n    params:{\r\n        part: 'snippet',\r\n        type:'video',\r\n        maxResults: '5',\r\n        key: KEY\r\n    }\r\n});","import React from \"react\";\r\nimport \"./videoitem.css\";\r\n\r\nconst VideoItem = (props) => {\r\n    return (\r\n        <div onClick={() => props.onVideoSelect(props.video)} className=\"video-item item\">\r\n            <img className=\"ui image\" src = {props.video.snippet.thumbnails.high.url} alt=\"props.video.snippet.title\"></img>\r\n            <div className=\"content\">\r\n                <div className=\"header\">\r\n                    {props.video.snippet.title}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoItem;","import React from \"react\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nconst videoList = (props) => {\r\n    \r\n    const renderedList = props.videos.map((video) => {\r\n        return  <VideoItem \r\n                    key = {video.id.videoId} \r\n                    onVideoSelect={props.onVideoSelect} \r\n                    video={video} />;\r\n    });\r\n\r\n        return (\r\n            <div className=\"ui relaxed divided list\">\r\n                {renderedList}\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default videoList;","import React from 'react';\r\n\r\nconst videoDetail = (props) => {\r\n    if(!props.video){\r\n        return <div>Search Something</div>;\r\n    }\r\n\r\n    const videoSrc = `https://youtube.com/embed/${props.video.id.videoId}`;\r\n\r\n    return(\r\n        <div className=\"\">\r\n            <div className=\"ui embed\">\r\n                <iframe title=\"Video Player\" src={videoSrc}></iframe>\r\n            </div>\r\n                <div className=\"ui segment\">\r\n                    <h4 className=\"ui header\">\r\n                        {props.video.snippet.title}\r\n                    </h4>\r\n                    <p>\r\n                        {props.video.snippet.description}\r\n                    </p>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default videoDetail;","import React from 'react';\r\nimport SearchBar from './Components/searchBar';\r\nimport Youtube from './Api/youtube';\r\nimport VideoList from \"./Components/videoList\";\r\nimport VideoDetail from \"./Components/videoDetail\";\r\n\r\nclass App extends React.Component{\r\n    \r\n    state = { videos: [], selectedVideo: null};\r\n\r\n    onTermSubmit = async term => {\r\n       const response = await Youtube.get('/search', {\r\n           params:{\r\n                q: term\r\n           }\r\n       });\r\n       \r\n       this.setState({videos:response.data.items,\r\n                      selectedVideo: response.data.items[0]})\r\n    };\r\n    \r\n    onVideoSelect = (video) => {\r\n        this.setState({selectedVideo: video})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"ui container\"> \r\n            <SearchBar onFormSubmit={this.onTermSubmit} /> \r\n                <div className=\"ui grid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"eleven wide column\">\r\n                            <VideoDetail video={this.state.selectedVideo} />\r\n                        </div>\r\n\r\n                        <div className=\"five wide column\">\r\n                            <VideoList \r\n                                onVideoSelect={this.onVideoSelect} \r\n                                videos = {this.state.videos} />\r\n                        </div>    \r\n                        \r\n                    </div>\r\n                </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector(\"#root\")\r\n)"],"sourceRoot":""}